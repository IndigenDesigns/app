diff --git a/include/baresip.h b/include/baresip.h
index 9bfab8a..0651d01 100644
--- a/include/baresip.h
+++ b/include/baresip.h
@@ -183,7 +183,7 @@ int custom_hdrs_apply(const struct list *hdrs, custom_hdrs_h *h, void *arg);
 /** Defines the configuration line handler */
 typedef int (confline_h)(const struct pl *addr, void *arg);
 
-int  conf_configure(void);
+int  conf_configure(bool reset_conf);
 int  conf_modules(void);
 void conf_path_set(const char *path);
 int  conf_path_get(char *path, size_t sz);
@@ -288,9 +288,13 @@ struct config_net {
 	size_t nsc;             /**< Number of DNS nameservers      */
 };
 
+struct config_version {
+	char version_str[16];
+};
 
 /** Core configuration */
 struct config {
+	struct config_version version;
 
 	struct config_sip sip;
 
diff --git a/src/conf.c b/src/conf.c
index bfe59ba..dc8fa62 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -11,6 +11,7 @@
 #endif
 #include <stdio.h>
 #include <sys/stat.h>
+#include <string.h>
 #ifdef HAVE_IO_H
 #include <io.h>
 #endif
@@ -174,8 +175,17 @@ int conf_path_get(char *path, size_t sz)
 		return err;
 #endif
 
-	if (re_snprintf(path, sz, "%s" DIR_SEP ".baresip", buf) < 0)
+
+#ifdef SLPLUGIN
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link-plugin", buf) < 0)
+		return ENOMEM;
+#elif SLIVE
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link-onair", buf) < 0)
+		return ENOMEM;
+#else
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link", buf) < 0)
 		return ENOMEM;
+#endif
 
 	return 0;
 }
@@ -330,7 +340,7 @@ int conf_get_float(const struct conf *conf, const char *name, double *val)
  *
  * @return 0 if success, otherwise errorcode
  */
-int conf_configure(void)
+int conf_configure(bool reset_conf)
 {
 	char path[FS_PATH_MAX], file[FS_PATH_MAX];
 	int err;
@@ -347,6 +357,26 @@ int conf_configure(void)
 
 	if (re_snprintf(file, sizeof(file), "%s/config", path) < 0)
 		return ENOMEM;
+		
+	if(conf_fileexist(file)) {
+		conf_obj = mem_deref(conf_obj);
+		err = conf_alloc(&conf_obj, file);
+		if (err)
+			goto out;
+		err = config_parse_conf(conf_config(), conf_obj);
+		if(err || strcmp(conf_config()->version.version_str, BARESIP_VERSION)) {
+			reset_conf = true;
+			info("Version change: [%s] != [%s]\n", conf_config()->version.version_str, BARESIP_VERSION);
+		}
+	}
+
+	if(reset_conf) {
+		char old_name[FS_PATH_MAX];
+		info("Configuration Reset\n");
+		snprintf(old_name, sizeof(old_name), "%s.old", file);
+		unlink(old_name);
+		rename(file, old_name);
+	}
 
 	if (!conf_fileexist(file)) {
 
@@ -355,16 +385,16 @@ int conf_configure(void)
 		err = config_write_template(file, conf_config());
 		if (err)
 			goto out;
-	}
 
-	conf_obj = mem_deref(conf_obj);
-	err = conf_alloc(&conf_obj, file);
-	if (err)
-		goto out;
+		conf_obj = mem_deref(conf_obj);
+		err = conf_alloc(&conf_obj, file);
+		if (err)
+			goto out;
 
-	err = config_parse_conf(conf_config(), conf_obj);
-	if (err)
-		goto out;
+		err = config_parse_conf(conf_config(), conf_obj);
+		if (err)
+			goto out;
+	}
 
  out:
 	return err;
diff --git a/src/config.c b/src/config.c
index 61a3137..51b03ce 100644
--- a/src/config.c
+++ b/src/config.c
@@ -15,10 +15,21 @@
 #define PREFIX "/usr"
 #endif
 
+#if defined (SLPLUGIN)
+#define SL_MAX_CALLS 10
+#else
+#define SL_MAX_CALLS 7
+#endif
+
 
 /** Core Run-time Configuration - populated from config file */
 static struct config core_config = {
 
+	/** Config Version */
+	{
+		""
+	},
+
 	/** SIP User-Agent */
 	{
 		"",
@@ -30,7 +41,7 @@ static struct config core_config = {
 	/** Call config */
 	{
 		120,
-		4
+		SL_MAX_CALLS
 	},
 
 	/** Audio */
@@ -49,7 +60,7 @@ static struct config core_config = {
 		AUFMT_S16LE,
 		AUFMT_S16LE,
 		AUFMT_S16LE,
-		{20, 160},
+		{20, 400},
 	},
 
 	/** Video */
@@ -205,6 +216,9 @@ int config_parse_conf(struct config *cfg, const struct conf *conf)
 		return EINVAL;
 
 	/* Core */
+	conf_get_str(conf, "version_str", cfg->version.version_str,
+			sizeof(cfg->version.version_str));
+
 	if (0 == conf_get(conf, "poll_method", &pollm)) {
 		if (0 == poll_method_type(&method, &pollm)) {
 			err = poll_method_set(method);
@@ -346,6 +360,8 @@ int config_print(struct re_printf *pf, const struct config *cfg)
 		return 0;
 
 	err = re_hprintf(pf,
+			 "\n"
+			 "version_str\t\t%s\n"
 			 "\n"
 			 "# SIP\n"
 			 "sip_listen\t\t%s\n"
@@ -390,6 +406,8 @@ int config_print(struct re_printf *pf, const struct config *cfg)
 			 "\n"
 			 ,
 
+			 cfg->version.version_str,
+
 			 cfg->sip.local, cfg->sip.cert, cfg->sip.cafile,
 
 			 cfg->call.local_timeout,
@@ -437,18 +455,22 @@ static const char *default_cafile(void)
 
 static const char *default_audio_device(void)
 {
-#if defined (ANDROID)
-	return "opensles,nil";
+#if defined (SLPLUGIN)
+        return "effect";
+#elif defined (SLIVE)
+        return "effectonair";
+#elif defined (ANDROID)
+        return "opensles,nil";
 #elif defined (DARWIN)
-	return "coreaudio,default";
+        return "slaudio,default";
 #elif defined (FREEBSD)
-	return "oss,/dev/dsp";
+        return "oss,/dev/dsp";
 #elif defined (OPENBSD)
-	return "sndio,default";
+        return "sndio,default";
 #elif defined (WIN32)
-	return "winwave,nil";
+        return "slaudio,default";
 #else
-	return "alsa,default";
+        return "slaudio,default";
 #endif
 }
 
@@ -517,6 +539,7 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 
 	err |= re_hprintf(pf,
 			  "\n# Core\n"
+			  "version_str\t\t%s\n"
 			  "poll_method\t\t%s\t\t# poll, select"
 #ifdef HAVE_EPOLL
 				", epoll .."
@@ -526,7 +549,7 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 #endif
 				"\n"
 			  "\n# SIP\n"
-			  "#sip_listen\t\t0.0.0.0:5060\n"
+			  "sip_listen\t\t0.0.0.0:0\n"
 			  "#sip_certificate\tcert.pem\n"
 			  "#sip_cafile\t\t%s\n"
 			  "\n"
@@ -545,26 +568,26 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 			  "audio_player\t\t%s\n"
 			  "audio_source\t\t%s\n"
 			  "audio_alert\t\t%s\n"
-			  "#ausrc_srate\t\t48000\n"
-			  "#auplay_srate\t\t48000\n"
-			  "#ausrc_channels\t\t0\n"
-			  "#auplay_channels\t0\n"
-			  "#audio_txmode\t\tpoll\t\t# poll, thread\n"
+			  "ausrc_srate\t\t48000\n"
+			  "auplay_srate\t\t48000\n"
+			  "ausrc_channels\t\t2\n"
+			  "auplay_channels\t2\n"
+			  "audio_txmode\t\tthread\t\t# poll, thread\n"
 			  "audio_level\t\tno\n"
 			  "ausrc_format\t\ts16\t\t# s16, float, ..\n"
 			  "auplay_format\t\ts16\t\t# s16, float, ..\n"
 			  "auenc_format\t\ts16\t\t# s16, float, ..\n"
 			  "audec_format\t\ts16\t\t# s16, float, ..\n"
-			  "audio_buffer\t\t%H\t\t# ms\n"
+			  "audio_buffer\t\t20-400\t\t# ms\n"
 			  ,
+			  BARESIP_VERSION,
 			  poll_method_name(poll_method_best()),
 			  default_cafile(),
 			  cfg->call.local_timeout,
-			  cfg->call.max_calls,
-			  default_audio_device(),
+			  SL_MAX_CALLS,
 			  default_audio_device(),
 			  default_audio_device(),
-			  range_print, &cfg->audio.buffer);
+			  default_audio_device());
 
 	err |= re_hprintf(pf,
 			  "\n# Video\n"
@@ -588,14 +611,14 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 			  "#rtp_ports\t\t10000-20000\n"
 			  "#rtp_bandwidth\t\t512-1024 # [kbit/s]\n"
 			  "rtcp_mux\t\tno\n"
-			  "jitter_buffer_delay\t%u-%u\t\t# frames\n"
+			  "jitter_buffer_delay\t0\t\t# frames\n"
 			  "rtp_stats\t\tno\n"
 			  "#rtp_timeout\t\t60\n"
 			  "\n# Network\n"
-			  "#dns_server\t\t1.1.1.1:53\n"
-			  "#dns_server\t\t1.0.0.1:53\n"
+                          "#dns_server\t\t1.1.1.1:53\n"
+                          "#dns_server\t\t74.82.42.42:53\n"
+                          "#dns_server\t\t9.9.9.10:53\n"
 			  "#net_interface\t\t%H\n",
-			  cfg->avt.jbuf_del.min, cfg->avt.jbuf_del.max,
 			  default_interface_print, NULL);
 
 	return err;
@@ -712,20 +735,23 @@ int config_write_template(const char *file, const struct config *cfg)
 			 modpath_valid ? "" : "#", modpath);
 
 	(void)re_fprintf(f, "\n# UI Modules\n");
+#ifndef SLIVE
+	(void)re_fprintf(f, "module\t\t\t" "slogging" MOD_EXT "\n");
 #if defined (WIN32)
 	(void)re_fprintf(f, "module\t\t\t" "wincons" MOD_EXT "\n");
 #else
 	(void)re_fprintf(f, "module\t\t\t" "stdio" MOD_EXT "\n");
+#endif
 #endif
 	(void)re_fprintf(f, "#module\t\t\t" "cons" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "evdev" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "httpd" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Audio codec Modules (in order)\n");
-	(void)re_fprintf(f, "#module\t\t\t" "opus" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" "opus" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "amr" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "g7221" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "g722" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" "g722" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "g726" MOD_EXT "\n");
 	(void)re_fprintf(f, "module\t\t\t" "g711" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "gsm" MOD_EXT "\n");
@@ -742,27 +768,20 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "#module\t\t\t" "plc" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "webrtc_aec" MOD_EXT "\n");
 
-	(void)re_fprintf(f, "\n# Audio driver Modules\n");
+        (void)re_fprintf(f, "\n# Audio driver Modules\n");
 #if defined (ANDROID)
-	(void)re_fprintf(f, "module\t\t\t" "opensles" MOD_EXT "\n");
-#elif defined (DARWIN)
-	(void)re_fprintf(f, "module\t\t\t" "coreaudio" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "audiounit" MOD_EXT "\n");
-#elif defined (FREEBSD)
-	(void)re_fprintf(f, "module\t\t\t" "oss" MOD_EXT "\n");
-#elif defined (OPENBSD)
-	(void)re_fprintf(f, "module\t\t\t" "sndio" MOD_EXT "\n");
-#elif defined (WIN32)
-	(void)re_fprintf(f, "module\t\t\t" "winwave" MOD_EXT "\n");
+        (void)re_fprintf(f, "module\t\t\t" "opensles" MOD_EXT "\n");
+#elif defined (SLPLUGIN)
+        (void)re_fprintf(f, "module\t\t\t" MOD_PRE "effect" MOD_EXT "\n");
+#elif defined (SLIVE)
+        (void)re_fprintf(f, "module\t\t\t" MOD_PRE "effectonair" MOD_EXT "\n");
 #else
-	(void)re_fprintf(f, "module\t\t\t" "alsa" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "pulse" MOD_EXT "\n");
+        (void)re_fprintf(f, "module\t\t\t" MOD_PRE "slaudio" MOD_EXT "\n");
 #endif
-	(void)re_fprintf(f, "#module\t\t\t" "jack" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "portaudio" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "aubridge" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "aufile" MOD_EXT "\n");
-
+        (void)re_fprintf(f, "#module\t\t\t" "jack" MOD_EXT "\n");
+        (void)re_fprintf(f, "#module\t\t\t" "portaudio" MOD_EXT "\n");
+        (void)re_fprintf(f, "#module\t\t\t" "aubridge" MOD_EXT "\n");
+        (void)re_fprintf(f, "#module\t\t\t" "aufile" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Video codec Modules (in order)\n");
 	(void)re_fprintf(f, "#module\t\t\t" "avcodec" MOD_EXT "\n");
@@ -779,13 +798,13 @@ int config_write_template(const char *file, const struct config *cfg)
 #if defined (DARWIN)
 
 #ifdef QTCAPTURE_RUNLOOP
-	(void)re_fprintf(f, "module\t\t\t" "qtcapture" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" "qtcapture" MOD_EXT "\n");
 #else
-	(void)re_fprintf(f, "module\t\t\t" "avcapture" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" "avcapture" MOD_EXT "\n");
 #endif
 
 #elif defined (WIN32)
-	(void)re_fprintf(f, "module\t\t\t" "dshow" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" "dshow" MOD_EXT "\n");
 
 #else
 	(void)re_fprintf(f, "#module\t\t\t" "v4l2" MOD_EXT "\n");
@@ -819,7 +838,7 @@ int config_write_template(const char *file, const struct config *cfg)
 
 	(void)re_fprintf(f, "\n# Media encryption modules\n");
 	(void)re_fprintf(f, "#module\t\t\t" "srtp" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" "dtls_srtp" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" "dtls_srtp" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" "zrtp" MOD_EXT "\n");
 	(void)re_fprintf(f, "\n");
 
@@ -828,33 +847,41 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "# Temporary Modules (loaded then unloaded)\n");
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "module_tmp\t\t" "uuid" MOD_EXT "\n");
-	(void)re_fprintf(f, "module_tmp\t\t" "account" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module_tmp\t\t" "account" MOD_EXT "\n");
 	(void)re_fprintf(f, "\n");
 
 	(void)re_fprintf(f, "\n#------------------------------------"
 			 "------------------------------------------\n");
 	(void)re_fprintf(f, "# Application Modules\n");
 	(void)re_fprintf(f, "\n");
-	(void)re_fprintf(f, "module_app\t\t" "auloop"MOD_EXT"\n");
+#ifndef SLIVE
+	(void)re_fprintf(f, "#module_app\t\t" "auloop"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" "b2bua"MOD_EXT"\n");
-	(void)re_fprintf(f, "module_app\t\t"  "contact"MOD_EXT"\n");
-	(void)re_fprintf(f, "module_app\t\t"  "debug_cmd"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  "contact"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  "debug_cmd"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t"  "echo"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" "gtk" MOD_EXT "\n");
-	(void)re_fprintf(f, "module_app\t\t"  "menu"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  "menu"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t"  "mwi"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" "presence"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" "syslog"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" "mqtt" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module_app\t\t" "ctrl_tcp" MOD_EXT "\n");
-	(void)re_fprintf(f, "module_app\t\t" "vidloop"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t" "vidloop"MOD_EXT"\n");
+#endif
+#ifdef SLIVE
+        (void)re_fprintf(f, "module_app\t\t" MOD_PRE "apponair"MOD_EXT"\n");
+#else
+        (void)re_fprintf(f, "module_app\t\t" MOD_PRE "webapp"MOD_EXT"\n");
+#endif
+
 	(void)re_fprintf(f, "\n");
 
 	(void)re_fprintf(f, "\n#------------------------------------"
 			 "------------------------------------------\n");
 	(void)re_fprintf(f, "# Module parameters\n");
 	(void)re_fprintf(f, "\n");
-
+#if 0
 	(void)re_fprintf(f, "\n# UI Modules parameters\n");
 	(void)re_fprintf(f, "cons_listen\t\t0.0.0.0:5555 # cons\n");
 
@@ -866,9 +893,9 @@ int config_write_template(const char *file, const struct config *cfg)
 
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "evdev_device\t\t/dev/input/event0\n");
-
+#endif
 	(void)re_fprintf(f, "\n# Opus codec parameters\n");
-	(void)re_fprintf(f, "opus_bitrate\t\t28000 # 6000-510000\n");
+	(void)re_fprintf(f, "opus_bitrate\t\t128000 # 6000-510000\n");
 	(void)re_fprintf(f, "#opus_stereo\t\tyes\n");
 	(void)re_fprintf(f, "#opus_sprop_stereo\tyes\n");
 	(void)re_fprintf(f, "#opus_cbr\t\tno\n");
@@ -876,8 +903,8 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "#opus_dtx\t\tno\n");
 	(void)re_fprintf(f, "#opus_mirror\t\tno\n");
 	(void)re_fprintf(f, "#opus_complexity\t10\n");
-	(void)re_fprintf(f, "#opus_application\taudio\t# {voip,audio}\n");
-	(void)re_fprintf(f, "#opus_samplerate\t48000\n");
+	(void)re_fprintf(f, "opus_application\taudio\t# {voip,audio}\n");
+	(void)re_fprintf(f, "opus_samplerate\t48000\n");
 	(void)re_fprintf(f, "#opus_packet_loss\t10\t# 0-100 percent\n");
 
 	(void)re_fprintf(f, "\n# Opus Multistream codec parameters\n");
@@ -901,7 +928,7 @@ int config_write_template(const char *file, const struct config *cfg)
 
 	(void)re_fprintf(f,
 			"\n# ICE\n"
-			"ice_debug\t\tno\n"
+			"ice_debug\t\tyes\n"
 			"ice_nomination\t\tregular\t# {regular,aggressive}\n");
 
 	(void)re_fprintf(f,
diff --git a/src/main.c b/src/main.c
index 610f1e8..5222253 100644
--- a/src/main.c
+++ b/src/main.c
@@ -78,6 +78,7 @@ static void usage(void)
 			 "\t-m <module>      Pre-load modules (repeat)\n"
 			 "\t-p <path>        Audio files\n"
 			 "\t-h -?            Help\n"
+			 "\t-r               Reset configuration\n"
 			 "\t-s               Enable SIP trace\n"
 			 "\t-t <sec>         Quit after <sec> seconds\n"
 			 "\t-n <net_if>      Specify network interface\n"
@@ -102,6 +103,7 @@ int main(int argc, char *argv[])
 	size_t i;
 	uint32_t tmo = 0;
 	int err;
+	int reset_conf = false;
 
 	/*
 	 * turn off buffering on stdout
@@ -123,7 +125,7 @@ int main(int argc, char *argv[])
 
 #ifdef HAVE_GETOPT
 	for (;;) {
-		const int c = getopt(argc, argv, "46de:f:p:hu:n:vst:m:");
+		const int c = getopt(argc, argv, "46de:f:p:hu:n:vrst:m:");
 		if (0 > c)
 			break;
 
@@ -196,6 +198,10 @@ int main(int argc, char *argv[])
 			log_enable_debug(true);
 			break;
 
+		case 'r':
+			reset_conf = true;
+			break;
+
 		default:
 			break;
 		}
@@ -205,7 +211,7 @@ int main(int argc, char *argv[])
 	(void)argv;
 #endif
 
-	err = conf_configure();
+	err = conf_configure(reset_conf);
 	if (err) {
 		warning("main: configure failed: %m\n", err);
 		goto out;
