diff -ru a/include/baresip.h b/include/baresip.h
--- a/include/baresip.h	2018-11-29 19:48:35.000000000 +0000
+++ b/include/baresip.h	2019-05-07 11:07:23.338613966 +0100
@@ -178,7 +178,7 @@
 /** Defines the configuration line handler */
 typedef int (confline_h)(const struct pl *addr, void *arg);
 
-int  conf_configure(void);
+int  conf_configure(bool reset_conf);
 int  conf_modules(void);
 void conf_path_set(const char *path);
 int  conf_path_get(char *path, size_t sz);
@@ -298,9 +298,13 @@
 	bool ebuacip;           /**< Enable EBU-ACIP parameters     */
 };
 
+struct config_version {
+	char version_str[16];
+};
 
 /** Core configuration */
 struct config {
+	struct config_version version;
 
 	struct config_sip sip;
 
diff -ru a/src/conf.c b/src/conf.c
--- a/src/conf.c	2018-11-29 19:48:35.000000000 +0000
+++ b/src/conf.c	2019-05-07 14:16:55.736631308 +0100
@@ -11,6 +11,7 @@
 #endif
 #include <stdio.h>
 #include <sys/stat.h>
+#include <string.h>
 #ifdef HAVE_IO_H
 #include <io.h>
 #endif
@@ -174,8 +175,17 @@
 		return err;
 #endif
 
-	if (re_snprintf(path, sz, "%s" DIR_SEP ".baresip", buf) < 0)
+
+#ifdef SLPLUGIN
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link-plugin", buf) < 0)
+		return ENOMEM;
+#elif SLIVE
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link-onair", buf) < 0)
+		return ENOMEM;
+#else
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link", buf) < 0)
 		return ENOMEM;
+#endif
 
 	return 0;
 }
@@ -330,7 +340,7 @@
  *
  * @return 0 if success, otherwise errorcode
  */
-int conf_configure(void)
+int conf_configure(bool reset_conf)
 {
 	char path[FS_PATH_MAX], file[FS_PATH_MAX];
 	int err;
@@ -347,6 +357,26 @@
 
 	if (re_snprintf(file, sizeof(file), "%s/config", path) < 0)
 		return ENOMEM;
+		
+	if(conf_fileexist(file)) {
+		conf_obj = mem_deref(conf_obj);
+		err = conf_alloc(&conf_obj, file);
+		if (err)
+			goto out;
+		err = config_parse_conf(conf_config(), conf_obj);
+		if(err || strcmp(conf_config()->version.version_str, BARESIP_VERSION)) {
+			reset_conf = true;
+			info("Version change: [%s] != [%s]\n", conf_config()->version.version_str, BARESIP_VERSION);
+		}
+	}
+
+	if(reset_conf) {
+		char old_name[FS_PATH_MAX];
+		info("Configuration Reset\n");
+		snprintf(old_name, sizeof(old_name), "%s.old", file);
+		unlink(old_name);
+		rename(file, old_name);
+	}
 
 	if (!conf_fileexist(file)) {
 
@@ -355,16 +385,16 @@
 		err = config_write_template(file, conf_config());
 		if (err)
 			goto out;
-	}
 
-	conf_obj = mem_deref(conf_obj);
-	err = conf_alloc(&conf_obj, file);
-	if (err)
-		goto out;
+		conf_obj = mem_deref(conf_obj);
+		err = conf_alloc(&conf_obj, file);
+		if (err)
+			goto out;
 
-	err = config_parse_conf(conf_config(), conf_obj);
-	if (err)
-		goto out;
+		err = config_parse_conf(conf_config(), conf_obj);
+		if (err)
+			goto out;
+	}
 
  out:
 	return err;
diff -ru a/src/config.c b/src/config.c
--- a/src/config.c	2018-11-29 19:48:35.000000000 +0000
+++ b/src/config.c	2019-05-07 14:11:41.626938719 +0100
@@ -26,7 +26,7 @@
 
 /** Core Run-time Configuration - populated from config file */
 static struct config core_config = {
-
+	"",
 	/** SIP User-Agent */
 	{
 		16,
@@ -39,7 +39,7 @@
 	/** Call config */
 	{
 		120,
-		4
+		15
 	},
 
 	/** Audio */
@@ -231,6 +231,8 @@
 		return EINVAL;
 
 	/* Core */
+	conf_get_str(conf, "version_str", cfg->version.version_str,
+                           sizeof(cfg->version.version_str));
 	if (0 == conf_get(conf, "poll_method", &pollm)) {
 		if (0 == poll_method_type(&method, &pollm)) {
 			err = poll_method_set(method);
@@ -381,6 +383,8 @@
 
 	err = re_hprintf(pf,
 			 "\n"
+			 "version_str\t\t%s\n"
+			 "\n"
 			 "# SIP\n"
 			 "sip_trans_bsize\t\t%u\n"
 			 "sip_listen\t\t%s\n"
@@ -431,7 +435,7 @@
 			 "\n"
 #endif
 			 ,
-
+			 cfg->version.version_str,
 			 cfg->sip.trans_bsize, cfg->sip.local, cfg->sip.cert,
 
 			 cfg->call.local_timeout,
@@ -476,18 +480,23 @@
 
 static const char *default_audio_device(void)
 {
-#if defined (ANDROID)
+
+#if defined (SLPLUGIN)
+	return "effect";
+#elif defined (SLIVE)
+	return "effectonair";
+#elif defined (ANDROID)
 	return "opensles,nil";
 #elif defined (DARWIN)
-	return "coreaudio,default";
+	return "slrtaudio,default";
 #elif defined (FREEBSD)
 	return "oss,/dev/dsp";
 #elif defined (OPENBSD)
 	return "sndio,default";
 #elif defined (WIN32)
-	return "winwave,nil";
+	return "slrtaudio,default";
 #else
-	return "alsa,default";
+	return "slrtaudio,default";
 #endif
 }
 
@@ -545,6 +554,7 @@
 
 	err |= re_hprintf(pf,
 			  "\n# Core\n"
+			  "version_str\t\t%s\n"
 			  "poll_method\t\t%s\t\t# poll, select"
 #ifdef HAVE_EPOLL
 				", epoll .."
@@ -555,7 +565,7 @@
 				"\n"
 			  "\n# SIP\n"
 			  "sip_trans_bsize\t\t128\n"
-			  "#sip_listen\t\t0.0.0.0:5060\n"
+			  "sip_listen\t\t0.0.0.0:0\n"
 			  "#sip_certificate\tcert.pem\n"
 			  "\n"
 			  "# Call\n"
@@ -573,10 +583,10 @@
 			  "audio_player\t\t%s\n"
 			  "audio_source\t\t%s\n"
 			  "audio_alert\t\t%s\n"
-			  "#ausrc_srate\t\t48000\n"
-			  "#auplay_srate\t\t48000\n"
-			  "#ausrc_channels\t\t0\n"
-			  "#auplay_channels\t\t0\n"
+			  "ausrc_srate\t\t48000\n"
+			  "auplay_srate\t\t48000\n"
+			  "ausrc_channels\t\t2\n"
+			  "auplay_channels\t\t2\n"
 			  "#audio_txmode\t\tpoll\t\t# poll, thread\n"
 			  "audio_level\t\tno\n"
 			  "ausrc_format\t\ts16\t\t# s16, float, ..\n"
@@ -584,6 +594,7 @@
 			  "auenc_format\t\ts16\t\t# s16, float, ..\n"
 			  "audec_format\t\ts16\t\t# s16, float, ..\n"
 			  ,
+			  BARESIP_VERSION,
 			  poll_method_name(poll_method_best()),
 			  cfg->call.local_timeout,
 			  cfg->call.max_calls,
@@ -616,13 +627,14 @@
 			  "#rtp_bandwidth\t\t512-1024 # [kbit/s]\n"
 			  "rtcp_enable\t\tyes\n"
 			  "rtcp_mux\t\tno\n"
-			  "jitter_buffer_delay\t%u-%u\t\t# frames\n"
+			  "jitter_buffer_delay\t2-5\t\t# frames\n"
 			  "rtp_stats\t\tno\n"
-			  "#rtp_timeout\t\t60\n"
+			  "##rtp_timeout\t\t60\n"
 			  "\n# Network\n"
-			  "#dns_server\t\t10.0.0.1:53\n"
+			  "dns_server\t\t74.82.42.42:53\n"
+			  "dns_server\t\t9.9.9.10:53\n"
+			  "dns_server\t\t1.1.1.1:53\n"
 			  "#net_interface\t\t%H\n",
-			  cfg->avt.jbuf_del.min, cfg->avt.jbuf_del.max,
 			  default_interface_print, NULL);
 
 #ifdef USE_VIDEO
@@ -755,7 +767,7 @@
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "httpd" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Audio codec Modules (in order)\n");
-	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "opus" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "opus" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "silk" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "amr" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "g7221" MOD_EXT "\n");
@@ -771,7 +783,7 @@
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "isac" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Audio filter Modules (in encoding order)\n");
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "vumeter" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "vumeter" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "sndfile" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "speex_aec" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "speex_pp" MOD_EXT "\n");
@@ -780,9 +792,13 @@
 	(void)re_fprintf(f, "\n# Audio driver Modules\n");
 #if defined (ANDROID)
 	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "opensles" MOD_EXT "\n");
+#elif defined (SLPLUGIN)
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "effect" MOD_EXT "\n");
+#elif defined (SLIVE)
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "effectonair" MOD_EXT "\n");
 #elif defined (DARWIN)
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "coreaudio" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "audiounit" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "coreaudio" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "audiounit" MOD_EXT "\n");
 #elif defined (FREEBSD)
 	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "oss" MOD_EXT "\n");
 #elif defined (OPENBSD)
@@ -793,6 +809,7 @@
 	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "alsa" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "pulse" MOD_EXT "\n");
 #endif
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "slrtaudio" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "jack" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "portaudio" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "aubridge" MOD_EXT "\n");
@@ -802,7 +819,7 @@
 
 	(void)re_fprintf(f, "\n# Video codec Modules (in order)\n");
 #ifdef USE_AVCODEC
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "avcodec" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "avcodec" MOD_EXT "\n");
 #else
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "avcodec" MOD_EXT "\n");
 #endif
@@ -820,13 +837,13 @@
 #if defined (DARWIN)
 
 #ifdef QTCAPTURE_RUNLOOP
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "qtcapture" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "qtcapture" MOD_EXT "\n");
 #else
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "avcapture" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "avcapture" MOD_EXT "\n");
 #endif
 
 #elif defined (WIN32)
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "dshow" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "dshow" MOD_EXT "\n");
 
 #else
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "v4l" MOD_EXT "\n");
@@ -842,7 +859,7 @@
 
 	(void)re_fprintf(f, "\n# Video display modules\n");
 #ifdef DARWIN
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "opengl" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "opengl" MOD_EXT "\n");
 #endif
 #ifdef LINUX
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "directfb" MOD_EXT "\n");
@@ -875,7 +892,7 @@
 	(void)re_fprintf(f, "# Temporary Modules (loaded then unloaded)\n");
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "module_tmp\t\t" MOD_PRE "uuid" MOD_EXT "\n");
-	(void)re_fprintf(f, "module_tmp\t\t" MOD_PRE "account" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module_tmp\t\t" MOD_PRE "account" MOD_EXT "\n");
 	(void)re_fprintf(f, "\n");
 
 	(void)re_fprintf(f, "\n#------------------------------------"
@@ -884,14 +901,20 @@
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "module_app\t\t" MOD_PRE "auloop"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "b2bua"MOD_EXT"\n");
-	(void)re_fprintf(f, "module_app\t\t"  MOD_PRE "contact"MOD_EXT"\n");
-	(void)re_fprintf(f, "module_app\t\t"  MOD_PRE "debug_cmd"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "contact"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "debug_cmd"MOD_EXT"\n");
 #ifdef LINUX
 	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "dtmfio"MOD_EXT"\n");
 #endif
+
+#ifdef SLIVE
+	(void)re_fprintf(f, "module_app\t\t" MOD_PRE "apponair"MOD_EXT"\n");
+#else
+	(void)re_fprintf(f, "module_app\t\t" MOD_PRE "webapp"MOD_EXT"\n");
+#endif
 	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "echo"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "gtk" MOD_EXT "\n");
-	(void)re_fprintf(f, "module_app\t\t"  MOD_PRE "menu"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "menu"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "mwi"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "natbd"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "presence"MOD_EXT"\n");
@@ -899,7 +922,7 @@
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "mqtt" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "ctrl_tcp" MOD_EXT "\n");
 #ifdef USE_VIDEO
-	(void)re_fprintf(f, "module_app\t\t" MOD_PRE "vidloop"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "vidloop"MOD_EXT"\n");
 #endif
 	(void)re_fprintf(f, "\n");
 
@@ -907,7 +930,7 @@
 			 "------------------------------------------\n");
 	(void)re_fprintf(f, "# Module parameters\n");
 	(void)re_fprintf(f, "\n");
-
+#if 0
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "cons_listen\t\t0.0.0.0:5555\n");
 
@@ -919,17 +942,17 @@
 
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "evdev_device\t\t/dev/input/event0\n");
-
+#endif
 	(void)re_fprintf(f, "\n# Opus codec parameters\n");
-	(void)re_fprintf(f, "opus_bitrate\t\t28000 # 6000-510000\n");
-	(void)re_fprintf(f, "#opus_stereo\t\tyes\n");
+	(void)re_fprintf(f, "opus_bitrate\t\t64000 # 6000-510000\n");
+	(void)re_fprintf(f, "opus_stereo\t\tyes\n");
 	(void)re_fprintf(f, "#opus_sprop_stereo\tyes\n");
 	(void)re_fprintf(f, "#opus_cbr\t\tno\n");
 	(void)re_fprintf(f, "#opus_inband_fec\tno\n");
 	(void)re_fprintf(f, "#opus_dtx\t\tno\n");
 	(void)re_fprintf(f, "#opus_mirror\t\tno\n");
 	(void)re_fprintf(f, "#opus_complexity\t\t10\n");
-	(void)re_fprintf(f, "#opus_application\t\taudio\t# {voip,audio}\n");
+	(void)re_fprintf(f, "opus_application\t\taudio\t# {voip,audio}\n");
 
 	(void)re_fprintf(f,
 			"\n# Selfview\n"
@@ -938,8 +961,8 @@
 
 	(void)re_fprintf(f,
 			"\n# ICE\n"
-			"ice_turn\t\tno\n"
-			"ice_debug\t\tno\n"
+			"ice_turn\t\tyes\n"
+			"ice_debug\t\tyes\n"
 			"ice_nomination\t\tregular\t# {regular,aggressive}\n"
 			"ice_mode\t\tfull\t# {full,lite}\n");
 
diff -ru a/src/main.c b/src/main.c
--- a/src/main.c	2018-11-29 19:48:35.000000000 +0000
+++ b/src/main.c	2019-05-07 09:13:22.377470452 +0100
@@ -58,6 +58,7 @@
 			 "\t-m <module>      Pre-load modules (repeat)\n"
 			 "\t-p <path>        Audio files\n"
 			 "\t-h -?            Help\n"
+			 "\t-r               Reset configuration\n"
 			 "\t-t               Test and exit\n"
 			 "\t-n <net_if>      Specify network interface\n"
 			 "\t-u <parameters>  Extra UA parameters\n"
@@ -68,7 +69,7 @@
 
 int main(int argc, char *argv[])
 {
-	bool prefer_ipv6 = false, run_daemon = false, test = false;
+	bool prefer_ipv6 = false, run_daemon = false, test = false, reset_conf = false;
 	const char *ua_eprm = NULL;
 	const char *execmdv[16];
 	const char *net_interface = NULL;
@@ -97,7 +98,7 @@
 
 #ifdef HAVE_GETOPT
 	for (;;) {
-		const int c = getopt(argc, argv, "6de:f:p:hun:vtm:");
+		const int c = getopt(argc, argv, "6de:f:p:hun:vrtm:");
 		if (0 > c)
 			break;
 
@@ -161,7 +162,9 @@
 		case 'v':
 			log_enable_debug(true);
 			break;
-
+		case 'r':
+			reset_conf = true;
+			break;
 		default:
 			break;
 		}
@@ -171,7 +174,7 @@
 	(void)argv;
 #endif
 
-	err = conf_configure();
+	err = conf_configure(reset_conf);
 	if (err) {
 		warning("main: configure failed: %m\n", err);
 		goto out;
